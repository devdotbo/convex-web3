import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ConvexClientProvider from "@/components/ConvexClientProvider";
import { headers } from "next/headers";
import ContextProvider from "@/context";
import AuthWatcher from "@/components/AuthWatcher";
import Script from "next/script";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  icons: {
    icon: "/convex.svg",
  },
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersObj = await headers();
  const cookies = headersObj.get('cookie');

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Script id="disable-lit-warnings" strategy="beforeInteractive">
          {`
            try {
              // Silence Lit dev and multiple-version warnings in development
              // See https://lit.dev/msg/multiple-versions and dev-mode notice
              // These globals are no-ops for production builds
              // @ts-ignore
              window.litDisableDevMode = true;
              // @ts-ignore
              window.litHtmlPolyfillSupport = () => {};
            } catch {}
          `}
        </Script>
        <ContextProvider cookies={cookies}>
          <ConvexClientProvider>
            <AuthWatcher />
            {children}
          </ConvexClientProvider>
        </ContextProvider>
      </body>
    </html>
  );
}
